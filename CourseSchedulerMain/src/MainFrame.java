
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.Date;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author acv
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    private String currentSemester;
    private String author;
    private String project;

    public MainFrame() {
        super("Course Scheduler");
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildCourseComboBoxes();
        rebuildClassComboBoxes();
        rebuildStudentComboBoxes();
       
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildCourseComboBoxes() {
        ArrayList<String> courses = CourseQueries.getAllCourseCodes();
        courseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel(courses.toArray()));
        
    }
    
    public void rebuildClassComboBoxes() {
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemesterLabel.getText());
        selectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        chooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        dropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        adminDropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
    }
    
    public void rebuildStudentComboBoxes() {
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        scheduleClassSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        displayScheduleSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        dropClassChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(students.toArray()));
        
        ArrayList<String> studentIDs = new ArrayList<String>();
        for (int i = 0; i < students.size(); i++)
        {
            studentIDs.add(students.get(i).getLastName() + ", " + students.get(i).getFirstName() + " [" + students.get(i).getStudentID() + "]");
        }
        chooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentIDs.toArray()));
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        accountTabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        adminTabs = new javax.swing.JTabbedPane();
        addSemesterPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        addCoursePanel = new javax.swing.JPanel();
        courseCodeLabel = new javax.swing.JLabel();
        courseDescriptionLabel = new javax.swing.JLabel();
        courseCodeTextField = new javax.swing.JTextField();
        courseDescriptionTextField = new javax.swing.JTextField();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        addClassPanel = new javax.swing.JPanel();
        addClassSubmitButton = new javax.swing.JButton();
        addClassCourseCodeLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        courseCodeComboBox = new javax.swing.JComboBox<>();
        seatsSpinner = new javax.swing.JSpinner();
        addClassStatusLabel = new javax.swing.JLabel();
        addStudentPanel = new javax.swing.JPanel();
        lastNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        studentIDTextField = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        studentIDLabel = new javax.swing.JLabel();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentStatusLabel = new javax.swing.JLabel();
        displayClassListPanel = new javax.swing.JPanel();
        chooseClassLabel = new javax.swing.JLabel();
        chooseClassComboBox = new javax.swing.JComboBox<>();
        displayClassListButton = new javax.swing.JButton();
        scheduledStudentsInClassLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduledStudentsTable = new javax.swing.JTable();
        waitlistedStudentsInClassLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        waitlistedStudentsTable = new javax.swing.JTable();
        dropStudentPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        chooseStudentComboBox = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        dropStudentTextArea = new javax.swing.JTextArea();
        dropStudentSubmitButton = new javax.swing.JButton();
        dropClassPanel = new javax.swing.JPanel();
        adminDropClassChooseClassLabel = new javax.swing.JLabel();
        adminDropClassComboBox = new javax.swing.JComboBox<>();
        adminDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        adminDropClassTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        studentTabs = new javax.swing.JTabbedPane();
        displayClassesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayTable = new javax.swing.JTable();
        displayButton = new javax.swing.JButton();
        scheduleClassPanel = new javax.swing.JPanel();
        selectClassLabel = new javax.swing.JLabel();
        scheduleClassSelectStudentLabel = new javax.swing.JLabel();
        selectClassComboBox = new javax.swing.JComboBox<>();
        scheduleClassSelectStudentComboBox = new javax.swing.JComboBox<>();
        scheduleClassSubmitButton = new javax.swing.JButton();
        scheduleClassStatusLabel = new javax.swing.JLabel();
        displaySchedulePanel = new javax.swing.JPanel();
        displayScheduleSelectStudentLabel = new javax.swing.JLabel();
        displayScheduleSelectStudentComboBox = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayScheduleTable = new javax.swing.JTable();
        displayScheduleButton = new javax.swing.JButton();
        studentDropClassPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        dropClassChooseStudentComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        dropClassChooseClassComboBox = new javax.swing.JComboBox<>();
        studentDropClassSubmitButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        studentDropClassTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        jLabel3.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout addSemesterPanelLayout = new javax.swing.GroupLayout(addSemesterPanel);
        addSemesterPanel.setLayout(addSemesterPanelLayout);
        addSemesterPanelLayout.setHorizontalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addSemesterSubmitButton)
                            .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(399, Short.MAX_VALUE))
        );
        addSemesterPanelLayout.setVerticalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        adminTabs.addTab("Add Semester", addSemesterPanel);

        courseCodeLabel.setText("Course Code: ");

        courseDescriptionLabel.setText("Course Description: ");

        courseCodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                courseCodeTextFieldActionPerformed(evt);
            }
        });

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        addCourseStatusLabel.setText("     ");

        javax.swing.GroupLayout addCoursePanelLayout = new javax.swing.GroupLayout(addCoursePanel);
        addCoursePanel.setLayout(addCoursePanelLayout);
        addCoursePanelLayout.setHorizontalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addCoursePanelLayout.createSequentialGroup()
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(courseDescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCourseSubmitButton)
                            .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(courseCodeTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                .addComponent(courseDescriptionTextField)))))
                .addContainerGap(474, Short.MAX_VALUE))
        );
        addCoursePanelLayout.setVerticalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseCodeLabel)
                    .addComponent(courseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(courseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(courseDescriptionLabel))
                .addGap(18, 18, 18)
                .addComponent(addCourseSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addCourseStatusLabel)
                .addContainerGap(139, Short.MAX_VALUE))
        );

        adminTabs.addTab("Add Course", addCoursePanel);

        addClassSubmitButton.setText("Submit");
        addClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassSubmitButtonActionPerformed(evt);
            }
        });

        addClassCourseCodeLabel.setText("Course Code:");

        jLabel5.setText("Seats:");

        courseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        addClassStatusLabel.setText("    ");

        javax.swing.GroupLayout addClassPanelLayout = new javax.swing.GroupLayout(addClassPanel);
        addClassPanel.setLayout(addClassPanelLayout);
        addClassPanelLayout.setHorizontalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addClassStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addClassPanelLayout.createSequentialGroup()
                        .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassCourseCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassSubmitButton)
                            .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(courseCodeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(seatsSpinner)))))
                .addContainerGap(597, Short.MAX_VALUE))
        );
        addClassPanelLayout.setVerticalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addClassCourseCodeLabel)
                    .addComponent(courseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addClassStatusLabel)
                .addContainerGap(151, Short.MAX_VALUE))
        );

        adminTabs.addTab("Add Class", addClassPanel);

        lastNameLabel.setText("Last Name:");

        studentIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentIDTextFieldActionPerformed(evt);
            }
        });

        firstNameLabel.setText("First Name: ");

        studentIDLabel.setText("Student ID: ");

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(studentIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(firstNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addStudentSubmitButton)
                            .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(studentIDTextField)
                                .addComponent(firstNameTextField)
                                .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(555, Short.MAX_VALUE))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(studentIDLabel)
                    .addComponent(studentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addStudentSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addStudentStatusLabel)
                .addContainerGap(127, Short.MAX_VALUE))
        );

        adminTabs.addTab("Add Student", addStudentPanel);

        chooseClassLabel.setText("Choose Class:");

        chooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayClassListButton.setText("Display");
        displayClassListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassListButtonActionPerformed(evt);
            }
        });

        scheduledStudentsInClassLabel.setText("Scheduled Students in the class:");

        scheduledStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(scheduledStudentsTable);

        waitlistedStudentsInClassLabel.setText("Waitlisted Students in the class:");

        waitlistedStudentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Last Name", "First Name", "Student ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(waitlistedStudentsTable);

        javax.swing.GroupLayout displayClassListPanelLayout = new javax.swing.GroupLayout(displayClassListPanel);
        displayClassListPanel.setLayout(displayClassListPanelLayout);
        displayClassListPanelLayout.setHorizontalGroup(
            displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayClassListPanelLayout.createSequentialGroup()
                        .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(scheduledStudentsInClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                                .addComponent(chooseClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                                .addGap(179, 179, 179)
                                .addComponent(waitlistedStudentsInClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(displayClassListButton))))
                    .addGroup(displayClassListPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        displayClassListPanelLayout.setVerticalGroup(
            displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chooseClassLabel)
                    .addComponent(chooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayClassListButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduledStudentsInClassLabel)
                    .addComponent(waitlistedStudentsInClassLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        adminTabs.addTab("Display Class List", displayClassListPanel);

        jLabel4.setText("Choose Student:");

        chooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropStudentTextArea.setEditable(false);
        dropStudentTextArea.setColumns(20);
        dropStudentTextArea.setRows(5);
        jScrollPane5.setViewportView(dropStudentTextArea);

        dropStudentSubmitButton.setText("Submit");
        dropStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropStudentSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dropStudentPanelLayout = new javax.swing.GroupLayout(dropStudentPanel);
        dropStudentPanel.setLayout(dropStudentPanelLayout);
        dropStudentPanelLayout.setHorizontalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropStudentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dropStudentSubmitButton)
                            .addComponent(chooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(317, Short.MAX_VALUE))
        );
        dropStudentPanelLayout.setVerticalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(chooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        adminTabs.addTab("Drop Student", dropStudentPanel);

        adminDropClassChooseClassLabel.setText("Choose Class:");

        adminDropClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        adminDropClassSubmitButton.setText("Submit");
        adminDropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDropClassSubmitButtonActionPerformed(evt);
            }
        });

        adminDropClassTextArea.setColumns(20);
        adminDropClassTextArea.setRows(5);
        jScrollPane7.setViewportView(adminDropClassTextArea);

        javax.swing.GroupLayout dropClassPanelLayout = new javax.swing.GroupLayout(dropClassPanel);
        dropClassPanel.setLayout(dropClassPanelLayout);
        dropClassPanelLayout.setHorizontalGroup(
            dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropClassPanelLayout.createSequentialGroup()
                        .addComponent(adminDropClassChooseClassLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adminDropClassSubmitButton)
                            .addComponent(adminDropClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(454, Short.MAX_VALUE))
        );
        dropClassPanelLayout.setVerticalGroup(
            dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminDropClassChooseClassLabel)
                    .addComponent(adminDropClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adminDropClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
        );

        adminTabs.addTab("Drop Class", dropClassPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminTabs)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(adminTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        accountTabs.addTab("Admin", jPanel1);

        displayTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        displayTable.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                displayTableComponentResized(evt);
            }
        });
        jScrollPane1.setViewportView(displayTable);

        displayButton.setText("Display");
        displayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displayClassesPanelLayout = new javax.swing.GroupLayout(displayClassesPanel);
        displayClassesPanel.setLayout(displayClassesPanelLayout);
        displayClassesPanelLayout.setHorizontalGroup(
            displayClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassesPanelLayout.createSequentialGroup()
                .addGroup(displayClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayClassesPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(displayClassesPanelLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(displayButton)))
                .addContainerGap(373, Short.MAX_VALUE))
        );
        displayClassesPanelLayout.setVerticalGroup(
            displayClassesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentTabs.addTab("Display Classes", displayClassesPanel);

        selectClassLabel.setText("Select Class:");

        scheduleClassSelectStudentLabel.setText("Select Student:");

        selectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scheduleClassSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scheduleClassSubmitButton.setText("Submit");
        scheduleClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleClassSubmitButtonActionPerformed(evt);
            }
        });

        scheduleClassStatusLabel.setText("    ");

        javax.swing.GroupLayout scheduleClassPanelLayout = new javax.swing.GroupLayout(scheduleClassPanel);
        scheduleClassPanel.setLayout(scheduleClassPanelLayout);
        scheduleClassPanelLayout.setHorizontalGroup(
            scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scheduleClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(scheduleClassPanelLayout.createSequentialGroup()
                        .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectClassLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scheduleClassSelectStudentLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scheduleClassSubmitButton)
                            .addComponent(scheduleClassSelectStudentComboBox, 0, 139, Short.MAX_VALUE)
                            .addComponent(selectClassComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(436, Short.MAX_VALUE))
        );
        scheduleClassPanelLayout.setVerticalGroup(
            scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectClassLabel)
                    .addComponent(selectClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(scheduleClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(scheduleClassSelectStudentLabel)
                    .addComponent(scheduleClassSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(scheduleClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(scheduleClassStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        studentTabs.addTab("Schedule Class", scheduleClassPanel);

        displayScheduleSelectStudentLabel.setText("Select Student: ");

        displayScheduleSelectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Course Code", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(displayScheduleTable);

        displayScheduleButton.setText("Display");
        displayScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayScheduleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout displaySchedulePanelLayout = new javax.swing.GroupLayout(displaySchedulePanel);
        displaySchedulePanel.setLayout(displaySchedulePanelLayout);
        displaySchedulePanelLayout.setHorizontalGroup(
            displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                        .addComponent(displayScheduleSelectStudentLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(displayScheduleSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                        .addGap(134, 134, 134)
                        .addComponent(displayScheduleButton)))
                .addContainerGap(375, Short.MAX_VALUE))
        );
        displaySchedulePanelLayout.setVerticalGroup(
            displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displaySchedulePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displaySchedulePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayScheduleSelectStudentLabel)
                    .addComponent(displayScheduleSelectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayScheduleButton)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        studentTabs.addTab("Display Schedule", displaySchedulePanel);

        jLabel6.setText("Choose Student:");

        dropClassChooseStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Choose Class:");

        dropClassChooseClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        studentDropClassSubmitButton.setText("Submit");
        studentDropClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studentDropClassSubmitButtonActionPerformed(evt);
            }
        });

        studentDropClassTextArea.setEditable(false);
        studentDropClassTextArea.setColumns(20);
        studentDropClassTextArea.setRows(5);
        jScrollPane6.setViewportView(studentDropClassTextArea);

        javax.swing.GroupLayout studentDropClassPanelLayout = new javax.swing.GroupLayout(studentDropClassPanel);
        studentDropClassPanel.setLayout(studentDropClassPanelLayout);
        studentDropClassPanelLayout.setHorizontalGroup(
            studentDropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentDropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(studentDropClassPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(studentDropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(studentDropClassSubmitButton)
                            .addComponent(dropClassChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(studentDropClassPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(384, Short.MAX_VALUE))
        );
        studentDropClassPanelLayout.setVerticalGroup(
            studentDropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(studentDropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(studentDropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(dropClassChooseStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(studentDropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(dropClassChooseClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(studentDropClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        studentTabs.addTab("Drop Class", studentDropClassPanel);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(studentTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(studentTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        accountTabs.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accountTabs)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(accountTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(259, 259, 259))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void courseCodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_courseCodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_courseCodeTextFieldActionPerformed

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        String courseCode = courseCodeTextField.getText();
        String courseDescription = courseDescriptionTextField.getText();
        CourseEntry course = new CourseEntry(courseCode, courseDescription);
        
        CourseQueries.addCourse(course);
        addCourseStatusLabel.setText(courseCode + " has been added.");
        rebuildCourseComboBoxes();
    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed

    private void studentIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentIDTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_studentIDTextFieldActionPerformed

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        String studentID = studentIDTextField.getText();
        String firstName = firstNameTextField.getText();
        String lastName = lastNameTextField.getText();
        StudentEntry student = new StudentEntry(studentID, firstName, lastName);
        
        StudentQueries.addStudent(student);
        addStudentStatusLabel.setText(lastName + ", " + firstName + " has been added.");
        rebuildStudentComboBoxes();
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void addClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassSubmitButtonActionPerformed
        String semester = currentSemesterLabel.getText();
        String courseCode = courseCodeComboBox.getSelectedItem().toString();
        int seats = (Integer)seatsSpinner.getValue();
        ClassEntry classEntry = new ClassEntry(semester, courseCode, seats);
        
        ClassQueries.addClass(classEntry);
        addClassStatusLabel.setText(courseCode + " has been added.");
        rebuildClassComboBoxes();
    }//GEN-LAST:event_addClassSubmitButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
        String newSemester = currentSemesterComboBox.getSelectedItem().toString();
        currentSemesterLabel.setText(newSemester);
        rebuildClassComboBoxes();
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void displayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
        ArrayList<ClassDescription> classes = MultiTableQueries.getAllClassDescriptions(currentSemesterLabel.getText());
        
        model.setRowCount(classes.size());
        for (int row = 0; row < classes.size(); row++) {
            model.setValueAt(classes.get(row).getCourseCode(), row, 0);
            model.setValueAt(classes.get(row).getDescription(), row, 1);
            model.setValueAt(classes.get(row).getSeats(), row, 2);
        }
    }//GEN-LAST:event_displayButtonActionPerformed

    private void displayTableComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_displayTableComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_displayTableComponentResized

    private void scheduleClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleClassSubmitButtonActionPerformed
        String semester = currentSemesterLabel.getText();
        String courseCode = selectClassComboBox.getSelectedItem().toString();
        
        // retrieving student ID
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentName = scheduleClassSelectStudentComboBox.getSelectedItem().toString();
        String studentID = null;
        for (StudentEntry student : students) {
            if (studentName.equals(student.getLastName() + ", " + student.getFirstName())) {
                studentID = student.getStudentID();
            }
        }
        // check availability
        int numStudentsScheduled = ScheduleQueries.getScheduledStudentCount(currentSemesterLabel.getText(), courseCode);
        int seats = ClassQueries.getClassSeats(currentSemesterLabel.getText(), courseCode);
        
        String status = null;
        if (seats - numStudentsScheduled <= 0) {
            status = "Waitlisted"; }
        else {
            status = "Scheduled"; }
        
        Date date = new Date();
        Timestamp timestamp = new Timestamp(date.getTime());

        ScheduleEntry schedule = new ScheduleEntry(semester, courseCode, studentID, status, timestamp);
        ScheduleQueries.addScheduleEntry(schedule);
        scheduleClassStatusLabel.setText(studentName + " has been " + status.toLowerCase() + " for " + courseCode + ".");
    }//GEN-LAST:event_scheduleClassSubmitButtonActionPerformed

    private void displayScheduleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayScheduleButtonActionPerformed
        String semester = currentSemesterLabel.getText();
        String studentName = displayScheduleSelectStudentComboBox.getSelectedItem().toString();
        
        // retrieving student ID
        ArrayList<StudentEntry> students = StudentQueries.getAllStudents();
        String studentID = null;
        for (StudentEntry student : students) {
            if (studentName.equals(student.getLastName() + ", " + student.getFirstName())) {
                studentID = student.getStudentID();
            }
        }
        ArrayList<ScheduleEntry> schedule = ScheduleQueries.getScheduleByStudent(semester, studentID);
        // reorder schedule so that waitlisted classes at end
        for (int i = 0; i < schedule.size(); i++) {
            if (schedule.get(i).getStatus().toLowerCase().equals("waitlisted")) {
                ScheduleEntry temp = schedule.get(i);
                schedule.remove(i); 
                schedule.add(temp);
            }
        }
        DefaultTableModel model = (DefaultTableModel) displayScheduleTable.getModel();
        model.setRowCount(schedule.size());
        for (int row = 0; row < schedule.size(); row++)
        {
            model.setValueAt(schedule.get(row).getCourseCode(), row, 0);
            model.setValueAt(schedule.get(row).getStatus(), row, 1);
        }
    }//GEN-LAST:event_displayScheduleButtonActionPerformed

    private void displayClassListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassListButtonActionPerformed
        String courseCode = chooseClassComboBox.getSelectedItem().toString();
        String semester = currentSemesterLabel.getText();
        DefaultTableModel scheduledModel = (DefaultTableModel) scheduledStudentsTable.getModel();
        DefaultTableModel waitlistedModel = (DefaultTableModel) waitlistedStudentsTable.getModel();
        ArrayList<StudentEntry> scheduledStudents = MultiTableQueries.getScheduledStudentsByClass(semester, courseCode);
        ArrayList<StudentEntry> waitlistedStudents = MultiTableQueries.getWaitlistedStudentsByClass(semester, courseCode);
        scheduledModel.setRowCount(scheduledStudents.size());
        waitlistedModel.setRowCount(waitlistedStudents.size());
        
        for (int row = 0; row < scheduledStudents.size(); row++)
        {
            scheduledModel.setValueAt(scheduledStudents.get(row).getLastName(), row, 0);
            scheduledModel.setValueAt(scheduledStudents.get(row).getFirstName(), row, 1);
            scheduledModel.setValueAt(scheduledStudents.get(row).getStudentID(), row, 2);
        }
        
        for (int row = 0; row < waitlistedStudents.size(); row++)
        {
            waitlistedModel.setValueAt(waitlistedStudents.get(row).getLastName(), row, 0);
            waitlistedModel.setValueAt(waitlistedStudents.get(row).getFirstName(), row, 1);
            waitlistedModel.setValueAt(waitlistedStudents.get(row).getStudentID(), row, 2);
        }
    }//GEN-LAST:event_displayClassListButtonActionPerformed

    private void dropStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropStudentSubmitButtonActionPerformed
        String student = chooseStudentComboBox.getSelectedItem().toString();
        String lastName = student.substring(0, student.indexOf(","));
        String firstName = student.substring(student.indexOf(",")+2, student.indexOf("[")-1);
        String studentID = student.substring(student.indexOf("[")+1, student.length()-1);
        
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        String text = "";
        ArrayList<ScheduleEntry> schedule = new ArrayList<ScheduleEntry>();
        ArrayList<ScheduleEntry> waitlisted = new ArrayList<ScheduleEntry>();
        String rescheduledStudent = "";
        for (String semester : semesters)
        {
            text += String.format("\n\nFor Semester: %s", semester);
            schedule = ScheduleQueries.getScheduleByStudent(semester, studentID);
            
            for (ScheduleEntry entry : schedule)
            {
                waitlisted = ScheduleQueries.getWaitlistedStudentsByClass(semester, entry.getCourseCode());
                if (entry.getStatus().equals("Scheduled"))
                {
                    if (waitlisted.size() == 0)
                    {
                        text += String.format("\n%s, %s [%s] has been dropped from %s.", lastName, firstName, studentID, entry.getCourseCode()); 
                    }
                    else
                    {
                        rescheduledStudent = StudentQueries.getStudent(waitlisted.get(0).getStudentID()).toString() + " [" + waitlisted.get(0).getStudentID() + "]";
                        text += String.format("\n%s, %s [%s] has been dropped from %s.", lastName, firstName, studentID, entry.getCourseCode()); 
                        text += String.format("\n%s has been scheduled into %s", rescheduledStudent, entry.getCourseCode());
                    }
                }
                else
                {
                    text += String.format("\n%s, %s [%s] has been dropped from the waitlist for %s.", lastName, firstName, studentID, entry.getCourseCode()); 
                }
                
            }
        }
        
        StudentQueries.dropStudent(studentID);
        rebuildStudentComboBoxes();
        dropStudentTextArea.setText(lastName + ", " + firstName + " [" + studentID + "] has been dropped from the list of students." + text);
    }//GEN-LAST:event_dropStudentSubmitButtonActionPerformed

    private void studentDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studentDropClassSubmitButtonActionPerformed
        String semester = currentSemesterLabel.getText();
        String student = dropClassChooseStudentComboBox.getSelectedItem().toString();
        String studentID = StudentQueries.getStudentID(student);
        String courseCode = dropClassChooseClassComboBox.getSelectedItem().toString();
        
        String text = String.format("%s [%s] has been dropped from %s.", student, studentID, courseCode);
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByClass(semester, courseCode);
        if (waitlisted.size() > 0)
        {
            ScheduleQueries.updateScheduleEntry(waitlisted.get(0));
            text += String.format("\n%s [%s] has been scheduled into %s.", StudentQueries.getStudent(waitlisted.get(0).getStudentID()), waitlisted.get(0).getStudentID(), courseCode);
        }
        ScheduleQueries.dropStudentScheduleByCourse(semester, studentID, courseCode);
        
        studentDropClassTextArea.setText(text);
    }//GEN-LAST:event_studentDropClassSubmitButtonActionPerformed

    private void adminDropClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDropClassSubmitButtonActionPerformed
        String semester = currentSemesterLabel.getText();
        String courseCode = adminDropClassComboBox.getSelectedItem().toString();
        ArrayList<ScheduleEntry> scheduled = ScheduleQueries.getScheduledStudentsByClass(semester, courseCode);
        ArrayList<ScheduleEntry> waitlisted = ScheduleQueries.getWaitlistedStudentsByClass(semester, courseCode);
        String text = "Scheduled students dropped from the course:";
        for (ScheduleEntry scheduledEntry : scheduled)
        {
            text += String.format("\n%s [%s]", StudentQueries.getStudent(scheduledEntry.getStudentID()), scheduledEntry.getStudentID());
        }
        text += "\n\nWaitlisted students dropped from the course:";
        for (ScheduleEntry waitlistedEntry : waitlisted)
        {
            text += String.format("\n%s [%s]", StudentQueries.getStudent(waitlistedEntry.getStudentID()), waitlistedEntry.getStudentID());
        }
        
        adminDropClassTextArea.setText(text);
        ClassQueries.dropClass(semester, courseCode);
        ScheduleQueries.dropScheduleByCourse(semester, courseCode);
        rebuildClassComboBoxes();
    }//GEN-LAST:event_adminDropClassSubmitButtonActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Spring 2024";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JTabbedPane accountTabs;
    private javax.swing.JLabel addClassCourseCodeLabel;
    private javax.swing.JPanel addClassPanel;
    private javax.swing.JLabel addClassStatusLabel;
    private javax.swing.JButton addClassSubmitButton;
    private javax.swing.JPanel addCoursePanel;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JPanel addSemesterPanel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JLabel adminDropClassChooseClassLabel;
    private javax.swing.JComboBox<String> adminDropClassComboBox;
    private javax.swing.JButton adminDropClassSubmitButton;
    private javax.swing.JTextArea adminDropClassTextArea;
    private javax.swing.JTabbedPane adminTabs;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JComboBox<String> chooseClassComboBox;
    private javax.swing.JLabel chooseClassLabel;
    private javax.swing.JComboBox<String> chooseStudentComboBox;
    private javax.swing.JComboBox<String> courseCodeComboBox;
    private javax.swing.JLabel courseCodeLabel;
    private javax.swing.JTextField courseCodeTextField;
    private javax.swing.JLabel courseDescriptionLabel;
    private javax.swing.JTextField courseDescriptionTextField;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayButton;
    private javax.swing.JButton displayClassListButton;
    private javax.swing.JPanel displayClassListPanel;
    private javax.swing.JPanel displayClassesPanel;
    private javax.swing.JButton displayScheduleButton;
    private javax.swing.JPanel displaySchedulePanel;
    private javax.swing.JComboBox<String> displayScheduleSelectStudentComboBox;
    private javax.swing.JLabel displayScheduleSelectStudentLabel;
    private javax.swing.JTable displayScheduleTable;
    private javax.swing.JTable displayTable;
    private javax.swing.JComboBox<String> dropClassChooseClassComboBox;
    private javax.swing.JComboBox<String> dropClassChooseStudentComboBox;
    private javax.swing.JPanel dropClassPanel;
    private javax.swing.JPanel dropStudentPanel;
    private javax.swing.JButton dropStudentSubmitButton;
    private javax.swing.JTextArea dropStudentTextArea;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JPanel scheduleClassPanel;
    private javax.swing.JComboBox<String> scheduleClassSelectStudentComboBox;
    private javax.swing.JLabel scheduleClassSelectStudentLabel;
    private javax.swing.JLabel scheduleClassStatusLabel;
    private javax.swing.JButton scheduleClassSubmitButton;
    private javax.swing.JLabel scheduledStudentsInClassLabel;
    private javax.swing.JTable scheduledStudentsTable;
    private javax.swing.JSpinner seatsSpinner;
    private javax.swing.JComboBox<String> selectClassComboBox;
    private javax.swing.JLabel selectClassLabel;
    private javax.swing.JPanel studentDropClassPanel;
    private javax.swing.JButton studentDropClassSubmitButton;
    private javax.swing.JTextArea studentDropClassTextArea;
    private javax.swing.JLabel studentIDLabel;
    private javax.swing.JTextField studentIDTextField;
    private javax.swing.JTabbedPane studentTabs;
    private javax.swing.JLabel waitlistedStudentsInClassLabel;
    private javax.swing.JTable waitlistedStudentsTable;
    // End of variables declaration//GEN-END:variables
}
